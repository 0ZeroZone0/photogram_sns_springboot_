select * from Subscribe;

-- 구독수 
select COUNT(*) from Subscribe where fromUserId = 3;

-- 구독여부 (ssar(1)로 로그인, cos(2)페이지로 감)
SELECT COUNT(*)  from Subscribe where fromUserId  = 1 and toUserId = 2;

-- 로그인(1 ssar) -- 구독정보(2 cos)

-- 1번과 3번의 정보(toUserId)가 구독 모달에 출력 
select * from Subscribe

select * from user;
select * from Subscribe where fromUserId = 2;

SELECT * FROM User WHERE id = 1 OR id = 3

-- 조인 (user.id - subscribe.toUserId)
SELECT u.id, u.username, u.profileImageUrl  
FROM User u INNER JOIN Subscribe s 
ON u.id = s.toUserId 
WHERE s.fromUserId = 2;

-- 로그인(ssar 1), 화면 구독모달(ssar 1, love 3)
SELECT TRUE  FROM Subscribe WHERE fromUserId = 1 AND toUserId = 1;
SELECT TRUE  FROM Subscribe WHERE fromUserId = 1 AND toUserId = 3;

-- 가상 컬럼 추가 
SELECT u.id, u.username, u.profileImageUrl , 1 subscribeState
FROM User u INNER JOIN Subscribe s 
ON u.id = s.toUserId 
WHERE s.fromUserId = 2;

-- 스칼라 서브쿼리(단일행을 리턴) 
SELECT u.id, 
	   u.username,
	   u.profileImageUrl,
	   (select u.id) subscribeState
FROM User u INNER JOIN Subscribe s 
ON u.id = s.toUserId 
WHERE s.fromUserId = 2;

-- 구독 여부 완성 쿼리 
SELECT u.id, 
	   u.username,
	   u.profileImageUrl,
	   (SELECT TRUE  FROM Subscribe WHERE fromUserId = 1 AND toUserId = u.id) subscribeState
FROM User u INNER JOIN Subscribe s 
ON u.id = s.toUserId 
WHERE s.fromUserId = 2;

-- 동일 유저인지 판단 여부
SELECT u.id, 
	   u.username,
	   u.profileImageUrl,
	   if((SELECT 1 FROM Subscribe WHERE fromUserId = 1 AND toUserId = u.id),1,0) subscribeState,
	   if((1=u.id),1,0) equalUserState
FROM User u INNER JOIN Subscribe s 
ON u.id = s.toUserId 
WHERE s.fromUserId = 2;



-- 2번 로그인시 : userd = 1 ,3
SELECT * FROM image WHERE userId IN (1,3);

SELECT * FROM user;

SELECT toUserId FROM Subscribe WHERE fromUserId = 2;

-- 서브쿼리 
SELECT * FROM image WHERE userId IN (SELECT toUserId FROM Subscribe WHERE fromUserId = 2);


-- 좋아요 테이블 조회
SELECT * FROM Likes;

UPDATE Likes set userId = '2' where imageId  ='1'

UPDATE Image set caption = '가짜 피카츄' where id  ='2'

select * from Image;


-- 좋아요가 있는 이미지 뽑아내기 
SELECT * FROM image;
SELECT * FROM Likes;

SELECT * FROM image WHERE id IN  (2,3);
SELECT DISTINCT  imageId from Likes; -- 중복제거 

SELECT * FROM image WHERE id IN  (SELECT DISTINCT  imageId from Likes);
SELECT imageId, 1 likeCount from Likes;
SELECT imageId, 1 likeCount from Likes Group By imageId ;
SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId ;
SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId ORDER BY likeCount DESC ;

-- 뒤에 쿼리가 오류 발생 .(뒤에 컬럼2개를 갖고오는게 문제라 하나의 컬럼만 갖고오게 수정해야함. )
-- SELECT * FROM image WHERE id IN  (SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId ORDER BY likeCount DESC);

SELECT imageId 
from (
SELECT imageId, COUNT(imageId) likeCount 
from Likes 
Group By imageId 
ORDER BY likeCount DESC 
) c;

-- 근데 문제는 IN 연산자 뒤에 들어가는 쿼리는 아무리 정렬해도 인기순으로 정렬 되지않는다..
SELECT * FROM image WHERE id IN  (SELECT imageId from ( SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId ORDER BY likeCount DESC ) c);

SELECT * from Image ;

SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId;

-- 잘 갖고오지만 이대로 갖고가면 레파지토리에 imageId , likeCount  땜에 오류나서 빼고 갖고가줘야한다. 
SELECT *
FROM image i INNER JOIN(SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId) c 
ON i.id = c.imageId
ORDER BY likeCount  DESC;

SELECT i.* FROM image i INNER JOIN(SELECT imageId, COUNT(imageId) likeCount from Likes Group By imageId) c ON i.id = c.imageId ORDER BY likeCount DESC;


-- 댓글 조회하기
select * from Comment 


